main()
            {
            static int var = 5;
            printf("%d ",var--);
            if(var)
                        main();
            }



5 4 3 2 1
5 5 5 5 5
Multiple declaration of main function
Program will enter Infinite loop
1
  main()
{
 show();
}
void show()
{
 printf("I'm the greatest");
}


I'm the greatest
Compiler Error
Linker error
None of the above
2
int i,j; 	
int ctr = 0; 
int myArray[2][3]; 
for (i=0; i<3; i++) 
   for (j=0; j<2; j++) 
   { 
      myArray[j][i] = ctr; 
      ++ctr; 
   }
What is the value of myArray[1][2]; in the sample code above? 
2 
3 
4 
5 
4
Code:
 short testarray[4][3] = { {1}, {2, 3}, {4, 5, 6} }; 
 printf( "%d\n", sizeof( testarray ) );
Assuming a short is two bytes long, what will be printed by the above code? 






It will not compile because not enough initializers are given. 
6 
7 
24 
4
int x[] = {1, 2, 3, 4, 5}; 
int u; 
int *ptr = x; 
???? 
for( u = 0; u < 5; u++ ){
 printf("%d-", x[u]); 
}
printf( "\n" ); 
Which one of the following statements could replace the ???? in the code above to cause the string 1-2-3-10-5- to be printed when the code is executed? 

*ptr + 3 = 10; 
*ptr[ 3 ] = 10; 
*(ptr + 3) = 10;
*(ptr[ 3 ]) = 10; 
3
 main()
{
            unsigned int i=65000;
            while(i++!=0);
            printf("%d",i);
}




1
65000
65001
0
1
What is the output of the program given below
 
main()
    {
       signed char i=0;
       for(;i>=0;i++) ;
       printf("%d\n",i);
    }


-127
127
128
-128
4
 main()
            {
       char i=0;
       for(;i>=0;i++) ;
       printf("%d\n",i);
        
 }



Garbage Value
Infinite loop
Error: Insufficient parameters for "for" loop
Behavior is implementation dependent.
4
What is the output for the program given below 
 
     typedef enum errorType{warning, error, exception,}error;
void main()
    {
        error g1;
        g1=1; 
        printf("%d",g1);
     }

The word "error" will be displayed
1
Compiler Error: Multiple declaration for error
Compiler Error: illegal enum declaration
3
main()
{
char p[ ]="%d\n";
p[1] = 'c';
printf(p,65);
}




A
a
C
Garbage  value
1